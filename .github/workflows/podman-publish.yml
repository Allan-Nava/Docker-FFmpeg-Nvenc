name: Podman FFmpeg 5.1.2 Nvenc 11.0
#
on:
    push:
      branches:
        - main
      tags:
        - '*'
  #
jobs:
    nvenc-docker:
      runs-on: ubuntu-latest
      permissions:
        contents: read
        packages: write
      steps:
            # Checkout the repository to the GitHub Actions runner
            - name: Checkout
              uses: actions/checkout@v3
            # Repo metadata
            - name: Repo metadata
              id: repo
              uses: actions/github-script@v4
              with:
                script: |
                  const repo = await github.repos.get(context.repo)
                  return repo.data
            # Prepare variables
            - name: Prepare
              id: prep
              run: |
                REG=ghcr.io
                IMAGE=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')
                DOCKER_IMAGE=${REG}/${IMAGE}
                VERSION=nool-ffmpeg5.1.2
                if [ "${{ github.event_name }}" = "schedule" ]; then
                  VERSION=nightly-ffmpeg5.1.2
                elif [[ $GITHUB_REF == refs/tags/* ]]; then
                  VERSION=${GITHUB_REF#refs/tags/}-ffmpeg5.1.2
                elif [[ $GITHUB_REF == refs/heads/* ]]; then
                  VERSION=$(echo ${GITHUB_REF#refs/heads/} | sed -r 's#/+#-#g')-ffmpeg5.1.2
                  if [ "${{ github.event.repository.default_branch }}" = "$VERSION" ]; then
                    VERSION=latest-ffmpeg5.1.2
                  fi
                elif [[ $GITHUB_REF == refs/pull/* ]]; then
                  VERSION=pr-${{ github.event.number }}
                fi
                TAGS="${DOCKER_IMAGE}:${VERSION}"
                if [[ $VERSION =~ ^v[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
                  MINOR=${VERSION%.*}
                  MAJOR=${MINOR%.*}
                  TAGS="$TAGS,${DOCKER_IMAGE}:${MINOR},${DOCKER_IMAGE}:${MAJOR},${DOCKER_IMAGE}:latest"
                fi
                echo ::set-output name=version::${VERSION}
                echo ::set-output name=tags::${TAGS}
                echo ::set-output name=created::$(date -u +'%Y-%m-%dT%H:%M:%SZ')
            # Set up Buildx env
            - uses: webgtx/gcr-podman-action@v2
             with:
                project_id: docker-ffmpeg-nvenc
                image_id: ${{ fromJson(steps.repo.outputs.result).name }}:${{ steps.prep.outputs.version }}
                #access_token: ${{ secrets.GOOGLE_JSON_KEY }}
#
